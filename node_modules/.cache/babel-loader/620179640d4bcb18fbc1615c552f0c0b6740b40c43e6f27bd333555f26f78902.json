{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/AeroJobs/AeroJob/frontend/src/contexts/AuthContext.js\",\n  _import$meta$env,\n  _process$env,\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../utils/api';\nimport toast from 'react-hot-toast';\n\n/* =========================\r\n   Safe Base URL (works for Vite or CRA)\r\n   ========================= */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = typeof import.meta !== 'undefined' && ((_import$meta$env = import.meta.env) === null || _import$meta$env === void 0 ? void 0 : _import$meta$env.VITE_API_BASE_URL) || typeof process !== 'undefined' && ((_process$env = process.env) === null || _process$env === void 0 ? void 0 : _process$env.REACT_APP_API_URL) || 'http://localhost:5000/api';\n\n/* =========================\r\n   Auth Context + Reducer\r\n   ========================= */\nconst AuthContext = /*#__PURE__*/createContext();\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  UPDATE_USER: 'UPDATE_USER',\n  SET_ERROR: 'SET_ERROR'\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n/* =========================\r\n   Provider\r\n   ========================= */\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Boot: rehydrate from localStorage\n  useEffect(() => {\n    try {\n      const token = localStorage.getItem('token');\n      const rawUser = localStorage.getItem('user');\n      if (token && rawUser) {\n        const user = JSON.parse(rawUser);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user,\n            token\n          }\n        });\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    } catch (e) {\n      console.error('Auth rehydrate error:', e);\n      logout();\n    }\n\n    // Safe debug (no crash on CRA or if env missing)\n    // eslint-disable-next-line no-console\n    console.log('[Auth] API base:', API_BASE_URL);\n  }, []);\n\n  /* ========== Helpers ========== */\n  const storeSession = ({\n    user,\n    token\n  }) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  };\n  const clearSession = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const normalizeErrorMessage = (error, fallback = 'Something went wrong') => {\n    if (error !== null && error !== void 0 && error.response) {\n      var _error$response$data;\n      return ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || fallback;\n    }\n    if (error !== null && error !== void 0 && error.request) {\n      return 'Network error: cannot reach the API server';\n    }\n    return (error === null || error === void 0 ? void 0 : error.message) || fallback;\n  };\n\n  /* ========== Actions ========== */\n\n  // LOGIN\n  const login = async credentials => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      var _res$data;\n      const res = await authAPI.login(credentials);\n\n      // OTP flow (backend may return { requiresVerification, userId })\n      if (res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && _res$data.requiresVerification) {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n        toast('Email not verified. We sent you an OTP.', {\n          icon: '✉️'\n        });\n        return {\n          requiresVerification: true,\n          userId: res.data.userId\n        };\n      }\n      const {\n        user,\n        token\n      } = res.data || {};\n      if (!user || !token) {\n        throw new Error('Malformed response from server');\n      }\n      storeSession({\n        user,\n        token\n      });\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      const msg = normalizeErrorMessage(err, 'Login failed');\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: msg\n      });\n      toast.error(msg);\n      return {\n        success: false,\n        error: msg\n      };\n    }\n  };\n\n  // REGISTER\n  const register = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      var _res$data2;\n      const res = await authAPI.register(userData);\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n      toast.success('Registered! Check your email for OTP.');\n      return {\n        success: true,\n        requiresVerification: true,\n        userId: res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.userId\n      };\n    } catch (err) {\n      const msg = normalizeErrorMessage(err, 'Registration failed');\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: msg\n      });\n      toast.error(msg);\n      return {\n        success: false,\n        error: msg\n      };\n    }\n  };\n\n  // VERIFY OTP\n  const verifyOTP = async (email, otp) => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      const res = await authAPI.verifyOTP({\n        email,\n        otp\n      });\n      const {\n        user,\n        token\n      } = res.data || {};\n      if (!user || !token) {\n        throw new Error('Malformed response from server');\n      }\n      storeSession({\n        user,\n        token\n      });\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Email verified successfully!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      const msg = normalizeErrorMessage(err, 'OTP verification failed');\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: msg\n      });\n      toast.error(msg);\n      return {\n        success: false,\n        error: msg\n      };\n    }\n  };\n\n  // RESEND OTP\n  const resendOTP = async email => {\n    try {\n      // FIXED: pass plain email, not { email }\n      await authAPI.resendOTP(email);\n      toast.success('OTP sent!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      const msg = normalizeErrorMessage(err, 'Failed to resend OTP');\n      toast.error(msg);\n      return {\n        success: false,\n        error: msg\n      };\n    }\n  };\n\n  // LOGOUT\n  const logout = () => {\n    clearSession();\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n    toast.success('Logged out');\n  };\n\n  // UPDATE USER (local cache)\n  const updateUser = userData => {\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: userData\n    });\n    try {\n      const existing = JSON.parse(localStorage.getItem('user') || '{}');\n      localStorage.setItem('user', JSON.stringify({\n        ...existing,\n        ...userData\n      }));\n    } catch {\n      // ignore\n    }\n  };\n\n  // ROLE HELPERS\n  const isAdmin = () => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.userType) === 'admin';\n  };\n  const isStudentOrAlumni = () => {\n    var _state$user2, _state$user3;\n    return ((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.userType) === 'student' || ((_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : _state$user3.userType) === 'alumni';\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    verifyOTP,\n    resendOTP,\n    logout,\n    updateUser,\n    isAdmin,\n    isStudentOrAlumni\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 10\n  }, this);\n};\n\n/* =========================\r\n   Hook\r\n   ========================= */\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const ctx = useContext(AuthContext);\n  if (!ctx) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return ctx;\n};\n_s2(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","API_BASE_URL","import","meta","_import$meta$env","env","VITE_API_BASE_URL","process","_process$env","REACT_APP_API_URL","AuthContext","AUTH_ACTIONS","SET_LOADING","LOGIN_SUCCESS","LOGOUT","UPDATE_USER","SET_ERROR","authReducer","state","action","type","loading","payload","user","token","isAuthenticated","error","initialState","AuthProvider","children","_s","dispatch","localStorage","getItem","rawUser","JSON","parse","e","console","logout","log","storeSession","setItem","stringify","clearSession","removeItem","normalizeErrorMessage","fallback","response","_error$response$data","data","message","request","login","credentials","_res$data","res","requiresVerification","icon","userId","Error","success","err","msg","register","userData","_res$data2","verifyOTP","email","otp","resendOTP","updateUser","existing","isAdmin","_state$user","userType","isStudentOrAlumni","_state$user2","_state$user3","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","ctx","$RefreshReg$"],"sources":["/Users/macbookair/Desktop/AeroJobs/AeroJob/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI } from '../utils/api';\r\nimport toast from 'react-hot-toast';\r\n\r\n/* =========================\r\n   Safe Base URL (works for Vite or CRA)\r\n   ========================= */\r\nconst API_BASE_URL =\r\n  (typeof import.meta !== 'undefined' && import.meta.env?.VITE_API_BASE_URL) ||\r\n  (typeof process !== 'undefined' && process.env?.REACT_APP_API_URL) ||\r\n  'http://localhost:5000/api';\r\n\r\n/* =========================\r\n   Auth Context + Reducer\r\n   ========================= */\r\nconst AuthContext = createContext();\r\n\r\nconst AUTH_ACTIONS = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n  SET_ERROR: 'SET_ERROR',\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return { ...state, loading: action.payload };\r\n\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n\r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n\r\n    case AUTH_ACTIONS.SET_ERROR:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\n/* =========================\r\n   Provider\r\n   ========================= */\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Boot: rehydrate from localStorage\r\n  useEffect(() => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const rawUser = localStorage.getItem('user');\r\n\r\n      if (token && rawUser) {\r\n        const user = JSON.parse(rawUser);\r\n        dispatch({\r\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n          payload: { user, token },\r\n        });\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    } catch (e) {\r\n      console.error('Auth rehydrate error:', e);\r\n      logout();\r\n    }\r\n\r\n    // Safe debug (no crash on CRA or if env missing)\r\n    // eslint-disable-next-line no-console\r\n    console.log('[Auth] API base:', API_BASE_URL);\r\n  }, []);\r\n\r\n  /* ========== Helpers ========== */\r\n  const storeSession = ({ user, token }) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  };\r\n\r\n  const clearSession = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const normalizeErrorMessage = (error, fallback = 'Something went wrong') => {\r\n    if (error?.response) {\r\n      return error.response.data?.message || fallback;\r\n    }\r\n    if (error?.request) {\r\n      return 'Network error: cannot reach the API server';\r\n    }\r\n    return error?.message || fallback;\r\n  };\r\n\r\n  /* ========== Actions ========== */\r\n\r\n  // LOGIN\r\n  const login = async (credentials) => {\r\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n    try {\r\n      const res = await authAPI.login(credentials);\r\n\r\n      // OTP flow (backend may return { requiresVerification, userId })\r\n      if (res?.data?.requiresVerification) {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n        toast('Email not verified. We sent you an OTP.', { icon: '✉️' });\r\n        return { requiresVerification: true, userId: res.data.userId };\r\n      }\r\n\r\n      const { user, token } = res.data || {};\r\n      if (!user || !token) {\r\n        throw new Error('Malformed response from server');\r\n      }\r\n\r\n      storeSession({ user, token });\r\n\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token },\r\n      });\r\n\r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const msg = normalizeErrorMessage(err, 'Login failed');\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: msg });\r\n      toast.error(msg);\r\n      return { success: false, error: msg };\r\n    }\r\n  };\r\n\r\n  // REGISTER\r\n  const register = async (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n    try {\r\n      const res = await authAPI.register(userData);\r\n\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      toast.success('Registered! Check your email for OTP.');\r\n      return {\r\n        success: true,\r\n        requiresVerification: true,\r\n        userId: res?.data?.userId,\r\n      };\r\n    } catch (err) {\r\n      const msg = normalizeErrorMessage(err, 'Registration failed');\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: msg });\r\n      toast.error(msg);\r\n      return { success: false, error: msg };\r\n    }\r\n  };\r\n\r\n  // VERIFY OTP\r\n  const verifyOTP = async (email, otp) => {\r\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n    try {\r\n      const res = await authAPI.verifyOTP({ email, otp });\r\n      const { user, token } = res.data || {};\r\n      if (!user || !token) {\r\n        throw new Error('Malformed response from server');\r\n      }\r\n\r\n      storeSession({ user, token });\r\n\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token },\r\n      });\r\n\r\n      toast.success('Email verified successfully!');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const msg = normalizeErrorMessage(err, 'OTP verification failed');\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: msg });\r\n      toast.error(msg);\r\n      return { success: false, error: msg };\r\n    }\r\n  };\r\n\r\n  // RESEND OTP\r\n  const resendOTP = async (email) => {\r\n    try {\r\n      // FIXED: pass plain email, not { email }\r\n      await authAPI.resendOTP(email);\r\n      toast.success('OTP sent!');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const msg = normalizeErrorMessage(err, 'Failed to resend OTP');\r\n      toast.error(msg);\r\n      return { success: false, error: msg };\r\n    }\r\n  };\r\n\r\n  // LOGOUT\r\n  const logout = () => {\r\n    clearSession();\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    toast.success('Logged out');\r\n  };\r\n\r\n  // UPDATE USER (local cache)\r\n  const updateUser = (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_USER, payload: userData });\r\n    try {\r\n      const existing = JSON.parse(localStorage.getItem('user') || '{}');\r\n      localStorage.setItem('user', JSON.stringify({ ...existing, ...userData }));\r\n    } catch {\r\n      // ignore\r\n    }\r\n  };\r\n\r\n  // ROLE HELPERS\r\n  const isAdmin = () => state.user?.userType === 'admin';\r\n  const isStudentOrAlumni = () =>\r\n    state.user?.userType === 'student' || state.user?.userType === 'alumni';\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    verifyOTP,\r\n    resendOTP,\r\n    logout,\r\n    updateUser,\r\n    isAdmin,\r\n    isStudentOrAlumni,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n/* =========================\r\n   Hook\r\n   ========================= */\r\nexport const useAuth = () => {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return ctx;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}