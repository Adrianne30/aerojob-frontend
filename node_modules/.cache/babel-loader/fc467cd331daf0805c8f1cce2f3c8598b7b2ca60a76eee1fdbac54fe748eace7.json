{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  verifyOTP: otpData => api.post('/auth/verify-otp', otpData),\n  resendOTP: email => api.post('/auth/resend-otp', {\n    email\n  }),\n  login: credentials => api.post('/auth/login', credentials),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  resetPassword: resetData => api.post('/auth/reset-password', resetData),\n  getProfile: () => api.get('/auth/profile')\n};\n\n// Users API\nexport const usersAPI = {\n  getAll: params => api.get('/users', {\n    params\n  }),\n  getById: id => api.get(`/users/${id}`),\n  createUser: userData => api.post('/users', userData),\n  updateProfile: data => api.put('/users/profile', data),\n  updateProfilePicture: formData => api.post('/users/profile/picture', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  deleteUser: id => api.delete(`/users/${id}`),\n  getStatistics: () => api.get('/users/statistics')\n};\n\n// Companies API\nexport const companiesAPI = {\n  getAll: params => api.get('/companies', {\n    params\n  }),\n  getById: id => api.get(`/companies/${id}`),\n  create: companyData => api.post('/companies', companyData),\n  update: (id, companyData) => api.put(`/companies/${id}`, companyData),\n  delete: id => api.delete(`/companies/${id}`),\n  updateLogo: (id, formData) => api.post(`/companies/${id}/logo`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  getStatistics: () => api.get('/companies/admin/statistics'),\n  search: params => api.get('/companies/search', {\n    params\n  })\n};\n\n// Jobs API\nexport const jobsAPI = {\n  getAll: params => api.get('/jobs', {\n    params\n  }),\n  getById: id => api.get(`/jobs/${id}`),\n  create: jobData => api.post('/jobs', jobData),\n  update: (id, jobData) => api.put(`/jobs/${id}`, jobData),\n  delete: id => api.delete(`/jobs/${id}`),\n  approve: id => api.patch(`/jobs/${id}/approve`),\n  getStatistics: () => api.get('/jobs/admin/statistics'),\n  search: params => api.get('/jobs/search', {\n    params\n  }),\n  getFeatured: () => api.get('/jobs/featured')\n};\n\n// Health check\nexport const healthCheck = () => api.get('/health');\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","verifyOTP","otpData","resendOTP","email","login","credentials","forgotPassword","resetPassword","resetData","getProfile","get","usersAPI","getAll","params","getById","id","createUser","updateProfile","data","put","updateProfilePicture","formData","deleteUser","delete","getStatistics","companiesAPI","companyData","update","updateLogo","search","jobsAPI","jobData","approve","patch","getFeatured","healthCheck"],"sources":["/Users/macbookair/Desktop/AeroJobs/AeroJob/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  verifyOTP: (otpData) => api.post('/auth/verify-otp', otpData),\r\n  resendOTP: (email) => api.post('/auth/resend-otp', { email }),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\r\n  resetPassword: (resetData) => api.post('/auth/reset-password', resetData),\r\n  getProfile: () => api.get('/auth/profile'),\r\n};\r\n\r\n// Users API\r\nexport const usersAPI = {\r\n  getAll: (params) => api.get('/users', { params }),\r\n  getById: (id) => api.get(`/users/${id}`),\r\n  createUser: (userData) => api.post('/users', userData),\r\n  updateProfile: (data) => api.put('/users/profile', data),\r\n  updateProfilePicture: (formData) => api.post('/users/profile/picture', formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  }),\r\n  deleteUser: (id) => api.delete(`/users/${id}`),\r\n  getStatistics: () => api.get('/users/statistics'),\r\n};\r\n\r\n// Companies API\r\nexport const companiesAPI = {\r\n  getAll: (params) => api.get('/companies', { params }),\r\n  getById: (id) => api.get(`/companies/${id}`),\r\n  create: (companyData) => api.post('/companies', companyData),\r\n  update: (id, companyData) => api.put(`/companies/${id}`, companyData),\r\n  delete: (id) => api.delete(`/companies/${id}`),\r\n  updateLogo: (id, formData) => api.post(`/companies/${id}/logo`, formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  }),\r\n  getStatistics: () => api.get('/companies/admin/statistics'),\r\n  search: (params) => api.get('/companies/search', { params }),\r\n};\r\n\r\n// Jobs API\r\nexport const jobsAPI = {\r\n  getAll: (params) => api.get('/jobs', { params }),\r\n  getById: (id) => api.get(`/jobs/${id}`),\r\n  create: (jobData) => api.post('/jobs', jobData),\r\n  update: (id, jobData) => api.put(`/jobs/${id}`, jobData),\r\n  delete: (id) => api.delete(`/jobs/${id}`),\r\n  approve: (id) => api.patch(`/jobs/${id}/approve`),\r\n  getStatistics: () => api.get('/jobs/admin/statistics'),\r\n  search: (params) => api.get('/jobs/search', { params }),\r\n  getFeatured: () => api.get('/jobs/featured'),\r\n};\r\n\r\n// Health check\r\nexport const healthCheck = () => api.get('/health');\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}