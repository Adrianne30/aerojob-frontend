{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/AeroJobs/AeroJob/frontend/src/contexts/AuthContext.js\",\n  _import$meta$env,\n  _process$env,\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../utils/api';\nimport toast from 'react-hot-toast';\n\n/* =========================\r\n   Safe Base URL (works for Vite or CRA)\r\n   ========================= */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = typeof import.meta !== 'undefined' && ((_import$meta$env = import.meta.env) === null || _import$meta$env === void 0 ? void 0 : _import$meta$env.VITE_API_BASE_URL) || typeof process !== 'undefined' && ((_process$env = process.env) === null || _process$env === void 0 ? void 0 : _process$env.REACT_APP_API_URL) || 'http://localhost:5000/api';\n\n/* =========================\r\n   Auth Context + Reducer\r\n   ========================= */\nconst AuthContext = /*#__PURE__*/createContext();\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  UPDATE_USER: 'UPDATE_USER',\n  SET_ERROR: 'SET_ERROR'\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n/* =========================\r\n   Helpers\r\n   ========================= */\nconst normalizeUser = u => {\n  if (!u || typeof u !== 'object') return null;\n  // Support either `role`, `userType`, or `type` from backend\n  const role = u.role || u.userType || u.type || null;\n  return {\n    ...u,\n    role\n  };\n};\nconst storeSession = ({\n  user,\n  token\n}) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('user', JSON.stringify(user));\n};\nconst clearSession = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\nconst normalizeErrorMessage = (error, fallback = 'Something went wrong') => {\n  var _error$response$data;\n  if (error !== null && error !== void 0 && error.response) return ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || fallback;\n  if (error !== null && error !== void 0 && error.request) return 'Network error: cannot reach the API server';\n  return (error === null || error === void 0 ? void 0 : error.message) || fallback;\n};\n\n/* =========================\r\n   Provider\r\n   ========================= */\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Boot: rehydrate from localStorage\n  useEffect(() => {\n    try {\n      const token = localStorage.getItem('token');\n      const rawUser = localStorage.getItem('user');\n      if (token && rawUser) {\n        const user = normalizeUser(JSON.parse(rawUser));\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user,\n            token\n          }\n        });\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    } catch (e) {\n      console.error('Auth rehydrate error:', e);\n      clearSession();\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n\n    // Safe debug\n    console.log('[Auth] API base:', API_BASE_URL);\n  }, []);\n\n  /* ========== Actions ========== */\n\n  // LOGIN\n  const login = async credentials => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      var _res$data, _res$data2, _res$data3;\n      const res = await authAPI.login(credentials);\n\n      // OTP flow\n      if (res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && _res$data.requiresVerification) {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n        toast('Email not verified. We sent you an OTP.', {\n          icon: '✉️'\n        });\n        return {\n          requiresVerification: true,\n          userId: res.data.userId\n        };\n      }\n      const rawUser = res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.user;\n      const token = res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.token;\n      if (!rawUser || !token) throw new Error('Malformed response from server');\n      const user = normalizeUser(rawUser);\n      storeSession({\n        user,\n        token\n      });\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true,\n        user\n      };\n    } catch (err) {\n      const msg = normalizeErrorMessage(err, 'Login failed');\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: msg\n      });\n      toast.error(msg);\n      return {\n        success: false,\n        error: msg\n      };\n    }\n  };\n\n  // REGISTER\n  const register = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      var _res$data4;\n      const res = await authAPI.register(userData);\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n      toast.success('Registered! Check your email for OTP.');\n      return {\n        success: true,\n        requiresVerification: true,\n        userId: res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.userId\n      };\n    } catch (err) {\n      const msg = normalizeErrorMessage(err, 'Registration failed');\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: msg\n      });\n      toast.error(msg);\n      return {\n        success: false,\n        error: msg\n      };\n    }\n  };\n\n  // VERIFY OTP\n  const verifyOTP = async (email, otp) => {\n    dispatch({\n      type: AUTH_ACTIONS.SET_LOADING,\n      payload: true\n    });\n    try {\n      var _res$data5, _res$data6;\n      const res = await authAPI.verifyOTP({\n        email,\n        otp\n      });\n      const rawUser = res === null || res === void 0 ? void 0 : (_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : _res$data5.user;\n      const token = res === null || res === void 0 ? void 0 : (_res$data6 = res.data) === null || _res$data6 === void 0 ? void 0 : _res$data6.token;\n      if (!rawUser || !token) throw new Error('Malformed response from server');\n      const user = normalizeUser(rawUser);\n      storeSession({\n        user,\n        token\n      });\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Email verified successfully!');\n      return {\n        success: true,\n        user\n      };\n    } catch (err) {\n      const msg = normalizeErrorMessage(err, 'OTP verification failed');\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: msg\n      });\n      toast.error(msg);\n      return {\n        success: false,\n        error: msg\n      };\n    }\n  };\n\n  // RESEND OTP\n  const resendOTP = async email => {\n    try {\n      await authAPI.resendOTP(email);\n      toast.success('OTP sent!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      const msg = normalizeErrorMessage(err, 'Failed to resend OTP');\n      toast.error(msg);\n      return {\n        success: false,\n        error: msg\n      };\n    }\n  };\n\n  // LOGOUT\n  const logout = () => {\n    clearSession();\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n    toast.success('Logged out');\n  };\n\n  // UPDATE USER\n  const updateUser = userData => {\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: userData\n    });\n    try {\n      const existing = JSON.parse(localStorage.getItem('user') || '{}');\n      localStorage.setItem('user', JSON.stringify({\n        ...existing,\n        ...userData\n      }));\n    } catch {\n      // ignore\n    }\n  };\n\n  // ROLE HELPERS\n  const isAdmin = () => {\n    var _state$user, _state$user2;\n    const r = ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) || ((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.userType);\n    return r === 'admin';\n  };\n  const isStudentOrAlumni = () => {\n    var _state$user3, _state$user4;\n    const r = ((_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : _state$user3.role) || ((_state$user4 = state.user) === null || _state$user4 === void 0 ? void 0 : _state$user4.userType);\n    return r === 'student' || r === 'alumni';\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    verifyOTP,\n    resendOTP,\n    logout,\n    updateUser,\n    isAdmin,\n    isStudentOrAlumni\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 10\n  }, this);\n};\n\n/* =========================\r\n   Hook\r\n   ========================= */\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error('useAuth must be used within an AuthProvider');\n  return ctx;\n};\n_s2(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","API_BASE_URL","import","meta","_import$meta$env","env","VITE_API_BASE_URL","process","_process$env","REACT_APP_API_URL","AuthContext","AUTH_ACTIONS","SET_LOADING","LOGIN_SUCCESS","LOGOUT","UPDATE_USER","SET_ERROR","authReducer","state","action","type","loading","payload","user","token","isAuthenticated","error","initialState","normalizeUser","u","role","userType","storeSession","localStorage","setItem","JSON","stringify","clearSession","removeItem","normalizeErrorMessage","fallback","_error$response$data","response","data","message","request","AuthProvider","children","_s","dispatch","getItem","rawUser","parse","e","console","log","login","credentials","_res$data","_res$data2","_res$data3","res","requiresVerification","icon","userId","Error","success","err","msg","register","userData","_res$data4","verifyOTP","email","otp","_res$data5","_res$data6","resendOTP","logout","updateUser","existing","isAdmin","_state$user","_state$user2","r","isStudentOrAlumni","_state$user3","_state$user4","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","ctx","$RefreshReg$"],"sources":["/Users/macbookair/Desktop/AeroJobs/AeroJob/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI } from '../utils/api';\r\nimport toast from 'react-hot-toast';\r\n\r\n/* =========================\r\n   Safe Base URL (works for Vite or CRA)\r\n   ========================= */\r\nconst API_BASE_URL =\r\n  (typeof import.meta !== 'undefined' && import.meta.env?.VITE_API_BASE_URL) ||\r\n  (typeof process !== 'undefined' && process.env?.REACT_APP_API_URL) ||\r\n  'http://localhost:5000/api';\r\n\r\n/* =========================\r\n   Auth Context + Reducer\r\n   ========================= */\r\nconst AuthContext = createContext();\r\n\r\nconst AUTH_ACTIONS = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n  SET_ERROR: 'SET_ERROR',\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return { ...state, loading: action.payload };\r\n\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n\r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return { ...state, user: { ...state.user, ...action.payload } };\r\n\r\n    case AUTH_ACTIONS.SET_ERROR:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\n/* =========================\r\n   Helpers\r\n   ========================= */\r\nconst normalizeUser = (u) => {\r\n  if (!u || typeof u !== 'object') return null;\r\n  // Support either `role`, `userType`, or `type` from backend\r\n  const role = u.role || u.userType || u.type || null;\r\n  return { ...u, role };\r\n};\r\n\r\nconst storeSession = ({ user, token }) => {\r\n  localStorage.setItem('token', token);\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n};\r\n\r\nconst clearSession = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nconst normalizeErrorMessage = (error, fallback = 'Something went wrong') => {\r\n  if (error?.response) return error.response.data?.message || fallback;\r\n  if (error?.request) return 'Network error: cannot reach the API server';\r\n  return error?.message || fallback;\r\n};\r\n\r\n/* =========================\r\n   Provider\r\n   ========================= */\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Boot: rehydrate from localStorage\r\n  useEffect(() => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const rawUser = localStorage.getItem('user');\r\n\r\n      if (token && rawUser) {\r\n        const user = normalizeUser(JSON.parse(rawUser));\r\n        dispatch({\r\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n          payload: { user, token },\r\n        });\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    } catch (e) {\r\n      console.error('Auth rehydrate error:', e);\r\n      clearSession();\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n\r\n    // Safe debug\r\n    console.log('[Auth] API base:', API_BASE_URL);\r\n  }, []);\r\n\r\n  /* ========== Actions ========== */\r\n\r\n  // LOGIN\r\n  const login = async (credentials) => {\r\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n    try {\r\n      const res = await authAPI.login(credentials);\r\n\r\n      // OTP flow\r\n      if (res?.data?.requiresVerification) {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n        toast('Email not verified. We sent you an OTP.', { icon: '✉️' });\r\n        return { requiresVerification: true, userId: res.data.userId };\r\n      }\r\n\r\n      const rawUser = res?.data?.user;\r\n      const token = res?.data?.token;\r\n      if (!rawUser || !token) throw new Error('Malformed response from server');\r\n\r\n      const user = normalizeUser(rawUser);\r\n\r\n      storeSession({ user, token });\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: { user, token } });\r\n\r\n      toast.success('Login successful!');\r\n      return { success: true, user };\r\n    } catch (err) {\r\n      const msg = normalizeErrorMessage(err, 'Login failed');\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: msg });\r\n      toast.error(msg);\r\n      return { success: false, error: msg };\r\n    }\r\n  };\r\n\r\n  // REGISTER\r\n  const register = async (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n    try {\r\n      const res = await authAPI.register(userData);\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      toast.success('Registered! Check your email for OTP.');\r\n      return {\r\n        success: true,\r\n        requiresVerification: true,\r\n        userId: res?.data?.userId,\r\n      };\r\n    } catch (err) {\r\n      const msg = normalizeErrorMessage(err, 'Registration failed');\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: msg });\r\n      toast.error(msg);\r\n      return { success: false, error: msg };\r\n    }\r\n  };\r\n\r\n  // VERIFY OTP\r\n  const verifyOTP = async (email, otp) => {\r\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n    try {\r\n      const res = await authAPI.verifyOTP({ email, otp });\r\n      const rawUser = res?.data?.user;\r\n      const token = res?.data?.token;\r\n      if (!rawUser || !token) throw new Error('Malformed response from server');\r\n\r\n      const user = normalizeUser(rawUser);\r\n\r\n      storeSession({ user, token });\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: { user, token } });\r\n\r\n      toast.success('Email verified successfully!');\r\n      return { success: true, user };\r\n    } catch (err) {\r\n      const msg = normalizeErrorMessage(err, 'OTP verification failed');\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: msg });\r\n      toast.error(msg);\r\n      return { success: false, error: msg };\r\n    }\r\n  };\r\n\r\n  // RESEND OTP\r\n  const resendOTP = async (email) => {\r\n    try {\r\n      await authAPI.resendOTP(email);\r\n      toast.success('OTP sent!');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const msg = normalizeErrorMessage(err, 'Failed to resend OTP');\r\n      toast.error(msg);\r\n      return { success: false, error: msg };\r\n    }\r\n  };\r\n\r\n  // LOGOUT\r\n  const logout = () => {\r\n    clearSession();\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    toast.success('Logged out');\r\n  };\r\n\r\n  // UPDATE USER\r\n  const updateUser = (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_USER, payload: userData });\r\n    try {\r\n      const existing = JSON.parse(localStorage.getItem('user') || '{}');\r\n      localStorage.setItem('user', JSON.stringify({ ...existing, ...userData }));\r\n    } catch {\r\n      // ignore\r\n    }\r\n  };\r\n\r\n  // ROLE HELPERS\r\n  const isAdmin = () => {\r\n    const r = state.user?.role || state.user?.userType;\r\n    return r === 'admin';\r\n  };\r\n  const isStudentOrAlumni = () => {\r\n    const r = state.user?.role || state.user?.userType;\r\n    return r === 'student' || r === 'alumni';\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    verifyOTP,\r\n    resendOTP,\r\n    logout,\r\n    updateUser,\r\n    isAdmin,\r\n    isStudentOrAlumni,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n/* =========================\r\n   Hook\r\n   ========================= */\r\nexport const useAuth = () => {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within an AuthProvider');\r\n  return ctx;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}