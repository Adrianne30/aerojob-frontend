{"ast":null,"code":"// src/utils/api.js\nimport axios from 'axios';\n\n/* -------- Base URL resolver (Vite/CRA) -------- */\nfunction pickEnvBase() {\n  var _import$meta$env, _import$meta$env2;\n  const vite = typeof import.meta !== 'undefined' && (((_import$meta$env = import.meta.env) === null || _import$meta$env === void 0 ? void 0 : _import$meta$env.VITE_API_BASE_URL) || ((_import$meta$env2 = import.meta.env) === null || _import$meta$env2 === void 0 ? void 0 : _import$meta$env2.VITE_API_URL)) || null;\n  const cra = typeof process !== 'undefined' && (process.env.REACT_APP_API_BASE_URL || process.env.REACT_APP_API_URL) || null;\n  return vite || cra || 'http://localhost:5000';\n}\nfunction buildRoots(raw) {\n  let base = String(raw || '').trim();\n  base = base.replace(/\\/+$/, '');\n  base = base.replace(/\\/api$/i, '');\n  const API_ROOT = `${base}/api`;\n  return {\n    API_BASE_RESOLVED: base,\n    API_ROOT\n  };\n}\nconst {\n  API_BASE_RESOLVED,\n  API_ROOT\n} = buildRoots(pickEnvBase());\nexport { API_BASE_RESOLVED as API_BASE, API_ROOT };\n\n/* -------- Axios instances -------- */\n// JSON API instance -> points to /api\nexport const http = axios.create({\n  baseURL: API_ROOT,\n  withCredentials: false,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// RAW base instance -> for non-/api routes like /upload and serving /uploads\nexport const httpRaw = axios.create({\n  baseURL: API_BASE_RESOLVED,\n  withCredentials: false\n});\n\n/* -------- Auth header helper -------- */\nexport function setAuthToken(token) {\n  if (token) {\n    http.defaults.headers.common.Authorization = `Bearer ${token}`;\n    httpRaw.defaults.headers.common.Authorization = `Bearer ${token}`;\n  } else {\n    delete http.defaults.headers.common.Authorization;\n    delete httpRaw.defaults.headers.common.Authorization;\n  }\n}\n\n/* -------- Interceptors (shared behavior) -------- */\n// If setAuthToken wasn't called, still try to read from localStorage\nfunction attachRequestAuth(instance) {\n  instance.interceptors.request.use(cfg => {\n    var _cfg$headers;\n    if (!((_cfg$headers = cfg.headers) !== null && _cfg$headers !== void 0 && _cfg$headers.Authorization)) {\n      const token = typeof localStorage !== 'undefined' ? localStorage.getItem('token') : null;\n      if (token) cfg.headers = {\n        ...cfg.headers,\n        Authorization: `Bearer ${token}`\n      };\n    }\n    return cfg;\n  });\n}\nfunction attachResponseNormalizer(instance) {\n  instance.interceptors.response.use(res => res, error => {\n    var _error$response, _error$response2;\n    const status = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status;\n    const data = error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n    const message = (data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || (error === null || error === void 0 ? void 0 : error.message) || `HTTP ${status || 'ERR'}`;\n    error.normalizedMessage = message;\n    return Promise.reject(error);\n  });\n}\nattachRequestAuth(http);\nattachRequestAuth(httpRaw);\nattachResponseNormalizer(http);\nattachResponseNormalizer(httpRaw);\n\n/* -------- Unwrap helper -------- */\nconst unwrap = p => p.then(r => r.data).catch(e => {\n  throw new Error(e.normalizedMessage || e.message || 'Request failed');\n});\n\n/* -------- Utility: ensure absolute URL for /uploads paths -------- */\nexport function absoluteUrl(path) {\n  if (!path) return '';\n  return /^https?:\\/\\//i.test(path) ? path : `${API_BASE_RESOLVED}${path}`;\n}\n\n/* -------- APIs -------- */\nexport const healthAPI = {\n  ping: () => unwrap(http.get('/health'))\n};\nexport const authAPI = {\n  // Auth\n  login: credentials => unwrap(http.post('/auth/login', credentials)),\n  register: payload => unwrap(http.post('/auth/register', payload)),\n  verifyOTP: ({\n    email,\n    code\n  }) => unwrap(http.post('/auth/verify', {\n    email,\n    code\n  })),\n  // backend: POST /api/auth/verify\n  resendOTP: ({\n    email\n  }) => unwrap(http.post('/auth/resend-otp', {\n    email\n  })),\n  // backend: POST /api/auth/resend-otp\n  forgotPassword: ({\n    email\n  }) => unwrap(http.post('/auth/forgot-password', {\n    email\n  })),\n  resetPassword: ({\n    email,\n    token,\n    password\n  }) => unwrap(http.post('/auth/reset-password', {\n    email,\n    token,\n    password\n  })),\n  me: () => unwrap(http.get('/auth/me')),\n  logout: () => unwrap(http.post('/auth/logout'))\n};\n\n// Optional aliases for older calls you might have elsewhere\nauthAPI.verify = authAPI.verifyOTP;\nauthAPI.resend = authAPI.resendOTP;\nexport const jobsAPI = {\n  list: (params = {}) => unwrap(http.get('/jobs', {\n    params\n  })),\n  get: id => unwrap(http.get(`/jobs/${id}`)),\n  create: payload => unwrap(http.post('/jobs', payload)),\n  update: (id, payload) => unwrap(http.put(`/jobs/${id}`, payload)),\n  remove: id => unwrap(http.delete(`/jobs/${id}`)),\n  listCategories: () => unwrap(http.get('/jobs/categories'))\n};\njobsAPI.getAll = jobsAPI.list;\nexport const companiesAPI = {\n  list: (params = {}) => unwrap(http.get('/companies', {\n    params\n  })),\n  get: id => unwrap(http.get(`/companies/${id}`)),\n  create: payload => unwrap(http.post('/companies', payload)),\n  update: (id, payload) => unwrap(http.put(`/companies/${id}`, payload)),\n  remove: id => unwrap(http.delete(`/companies/${id}`))\n};\ncompaniesAPI.getAll = companiesAPI.list;\n\n/* ---- Uploads: use base (no /api) ---- */\nexport const uploadsAPI = {\n  // returns the URL string like \"/uploads/companies/123-file.png\"\n  async uploadCompanyLogo(file) {\n    const formData = new FormData();\n    formData.append('logo', file);\n    const data = await unwrap(httpRaw.post('/upload/logo', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }));\n    return data === null || data === void 0 ? void 0 : data.url; // convenience: return just the path\n  }\n};\n\n/*\r\n  IMPORTANT:\r\n  Admin pages typically call /api/admin/users.\r\n  We align usersAPI to that base. Older code sometimes calls createUser/updateUser/deleteUser —\r\n  we expose aliases so nothing breaks.\r\n*/\nexport const usersAPI = {\n  list: (params = {}) => unwrap(http.get('/admin/users', {\n    params\n  })),\n  get: id => unwrap(http.get(`/admin/users/${id}`)),\n  create: payload => unwrap(http.post('/admin/users', payload)),\n  update: (id, payload) => unwrap(http.put(`/admin/users/${id}`, payload)),\n  remove: id => unwrap(http.delete(`/admin/users/${id}`))\n};\nusersAPI.getAll = usersAPI.list;\n// ✅ Back-compat aliases\nusersAPI.createUser = usersAPI.create;\nusersAPI.updateUser = usersAPI.update;\nusersAPI.deleteUser = usersAPI.remove;\nexport const surveysAPI = {\n  // --- Admin/General survey endpoints ---\n  list: (params = {}) => unwrap(http.get('/surveys', {\n    params\n  })),\n  get: id => unwrap(http.get(`/surveys/${id}`)),\n  create: payload => unwrap(http.post('/surveys', payload)),\n  update: (id, payload) => unwrap(http.put(`/surveys/${id}`, payload)),\n  remove: id => unwrap(http.delete(`/surveys/${id}`)),\n  // --- Admin: responses list/export ---\n  listResponses: (surveyId, params = {}) => unwrap(http.get(`/surveys/${surveyId}/responses`, {\n    params\n  })),\n  deleteResponse: (surveyId, responseId) => unwrap(http.delete(`/surveys/${surveyId}/responses/${responseId}`)),\n  exportCSV: surveyId => http.get(`/surveys/${surveyId}/responses/export`, {\n    responseType: 'blob'\n  }),\n  // --- Student/Alumni: pending surveys & submit ---\n  forMe: (params = {}) => unwrap(http.get('/surveys/active/eligible', {\n    params\n  })),\n  submitResponse: (surveyId, payload) => unwrap(http.post(`/surveys/${surveyId}/responses`, payload)),\n  myResponse: surveyId => unwrap(http.get(`/surveys/${surveyId}/my-response`)) // optional\n};\n// aliases / compatibility\nsurveysAPI.getAll = surveysAPI.list;\nsurveysAPI.responses = surveysAPI.listResponses;\n// Some pages call surveysAPI.delete(responseId). Provide a flat delete route too:\nsurveysAPI.delete = responseId => unwrap(http.delete(`/survey-responses/${responseId}`));\nsurveysAPI.eligibleActive = surveysAPI.forMe;\nsurveysAPI.submit = surveysAPI.submitResponse;\nexport const profileAPI = {\n  getMe: () => unwrap(http.get('/profile/me')),\n  updateMe: data => unwrap(http.put('/profile/me', data))\n};\nexport const adminAPI = {\n  getStats: () => unwrap(http.get('/admin/stats'))\n};\nexport function logApiBase() {\n  console.log('[API] Base URL:', API_BASE_RESOLVED, 'Root:', API_ROOT);\n}\nexport const analyticsAPI = {\n  logSearch: term => http.post('/analytics/search', {\n    term\n  }).catch(() => {})\n};\nexport default http;","map":{"version":3,"names":["axios","pickEnvBase","_import$meta$env","_import$meta$env2","vite","import","meta","env","VITE_API_BASE_URL","VITE_API_URL","cra","process","REACT_APP_API_BASE_URL","REACT_APP_API_URL","buildRoots","raw","base","String","trim","replace","API_ROOT","API_BASE_RESOLVED","API_BASE","http","create","baseURL","withCredentials","headers","httpRaw","setAuthToken","token","defaults","common","Authorization","attachRequestAuth","instance","interceptors","request","use","cfg","_cfg$headers","localStorage","getItem","attachResponseNormalizer","response","res","error","_error$response","_error$response2","status","data","message","normalizedMessage","Promise","reject","unwrap","p","then","r","catch","e","Error","absoluteUrl","path","test","healthAPI","ping","get","authAPI","login","credentials","post","register","payload","verifyOTP","email","code","resendOTP","forgotPassword","resetPassword","password","me","logout","verify","resend","jobsAPI","list","params","id","update","put","remove","delete","listCategories","getAll","companiesAPI","uploadsAPI","uploadCompanyLogo","file","formData","FormData","append","url","usersAPI","createUser","updateUser","deleteUser","surveysAPI","listResponses","surveyId","deleteResponse","responseId","exportCSV","responseType","forMe","submitResponse","myResponse","responses","eligibleActive","submit","profileAPI","getMe","updateMe","adminAPI","getStats","logApiBase","console","log","analyticsAPI","logSearch","term"],"sources":["/Users/macbookair/Desktop/AeroJobs/AeroJob/frontend/src/utils/api.js"],"sourcesContent":["// src/utils/api.js\r\nimport axios from 'axios';\r\n\r\n/* -------- Base URL resolver (Vite/CRA) -------- */\r\nfunction pickEnvBase() {\r\n  const vite =\r\n    (typeof import.meta !== 'undefined' &&\r\n      (import.meta.env?.VITE_API_BASE_URL || import.meta.env?.VITE_API_URL)) ||\r\n    null;\r\n  const cra =\r\n    (typeof process !== 'undefined' &&\r\n      (process.env.REACT_APP_API_BASE_URL || process.env.REACT_APP_API_URL)) ||\r\n    null;\r\n  return vite || cra || 'http://localhost:5000';\r\n}\r\n\r\nfunction buildRoots(raw) {\r\n  let base = String(raw || '').trim();\r\n  base = base.replace(/\\/+$/, '');\r\n  base = base.replace(/\\/api$/i, '');\r\n  const API_ROOT = `${base}/api`;\r\n  return { API_BASE_RESOLVED: base, API_ROOT };\r\n}\r\n\r\nconst { API_BASE_RESOLVED, API_ROOT } = buildRoots(pickEnvBase());\r\nexport { API_BASE_RESOLVED as API_BASE, API_ROOT };\r\n\r\n/* -------- Axios instances -------- */\r\n// JSON API instance -> points to /api\r\nexport const http = axios.create({\r\n  baseURL: API_ROOT,\r\n  withCredentials: false,\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\n// RAW base instance -> for non-/api routes like /upload and serving /uploads\r\nexport const httpRaw = axios.create({\r\n  baseURL: API_BASE_RESOLVED,\r\n  withCredentials: false,\r\n});\r\n\r\n/* -------- Auth header helper -------- */\r\nexport function setAuthToken(token) {\r\n  if (token) {\r\n    http.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    httpRaw.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  } else {\r\n    delete http.defaults.headers.common.Authorization;\r\n    delete httpRaw.defaults.headers.common.Authorization;\r\n  }\r\n}\r\n\r\n/* -------- Interceptors (shared behavior) -------- */\r\n// If setAuthToken wasn't called, still try to read from localStorage\r\nfunction attachRequestAuth(instance) {\r\n  instance.interceptors.request.use((cfg) => {\r\n    if (!cfg.headers?.Authorization) {\r\n      const token = typeof localStorage !== 'undefined' ? localStorage.getItem('token') : null;\r\n      if (token) cfg.headers = { ...cfg.headers, Authorization: `Bearer ${token}` };\r\n    }\r\n    return cfg;\r\n  });\r\n}\r\n\r\nfunction attachResponseNormalizer(instance) {\r\n  instance.interceptors.response.use(\r\n    (res) => res,\r\n    (error) => {\r\n      const status = error?.response?.status;\r\n      const data = error?.response?.data;\r\n      const message =\r\n        data?.message || data?.error || error?.message || `HTTP ${status || 'ERR'}`;\r\n      error.normalizedMessage = message;\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n\r\nattachRequestAuth(http);\r\nattachRequestAuth(httpRaw);\r\nattachResponseNormalizer(http);\r\nattachResponseNormalizer(httpRaw);\r\n\r\n/* -------- Unwrap helper -------- */\r\nconst unwrap = (p) =>\r\n  p.then((r) => r.data).catch((e) => {\r\n    throw new Error(e.normalizedMessage || e.message || 'Request failed');\r\n  });\r\n\r\n/* -------- Utility: ensure absolute URL for /uploads paths -------- */\r\nexport function absoluteUrl(path) {\r\n  if (!path) return '';\r\n  return /^https?:\\/\\//i.test(path) ? path : `${API_BASE_RESOLVED}${path}`;\r\n}\r\n\r\n/* -------- APIs -------- */\r\nexport const healthAPI = { ping: () => unwrap(http.get('/health')) };\r\n\r\nexport const authAPI = {\r\n  // Auth\r\n  login: (credentials) => unwrap(http.post('/auth/login', credentials)),\r\n  register: (payload) => unwrap(http.post('/auth/register', payload)),\r\n  verifyOTP: ({ email, code }) =>\r\n    unwrap(http.post('/auth/verify', { email, code })), // backend: POST /api/auth/verify\r\n  resendOTP: ({ email }) =>\r\n    unwrap(http.post('/auth/resend-otp', { email })),   // backend: POST /api/auth/resend-otp\r\n  forgotPassword: ({ email }) =>\r\n    unwrap(http.post('/auth/forgot-password', { email })),\r\n  resetPassword: ({ email, token, password }) =>\r\n    unwrap(http.post('/auth/reset-password', { email, token, password })),\r\n  me: () => unwrap(http.get('/auth/me')),\r\n  logout: () => unwrap(http.post('/auth/logout')),\r\n};\r\n\r\n// Optional aliases for older calls you might have elsewhere\r\nauthAPI.verify = authAPI.verifyOTP;\r\nauthAPI.resend = authAPI.resendOTP;\r\n\r\n\r\nexport const jobsAPI = {\r\n  list: (params = {}) => unwrap(http.get('/jobs', { params })),\r\n  get: (id) => unwrap(http.get(`/jobs/${id}`)),\r\n  create: (payload) => unwrap(http.post('/jobs', payload)),\r\n  update: (id, payload) => unwrap(http.put(`/jobs/${id}`, payload)),\r\n  remove: (id) => unwrap(http.delete(`/jobs/${id}`)),\r\n  listCategories: () => unwrap(http.get('/jobs/categories')),\r\n};\r\njobsAPI.getAll = jobsAPI.list;\r\n\r\nexport const companiesAPI = {\r\n  list: (params = {}) => unwrap(http.get('/companies', { params })),\r\n  get: (id) => unwrap(http.get(`/companies/${id}`)),\r\n  create: (payload) => unwrap(http.post('/companies', payload)),\r\n  update: (id, payload) => unwrap(http.put(`/companies/${id}`, payload)),\r\n  remove: (id) => unwrap(http.delete(`/companies/${id}`)),\r\n};\r\ncompaniesAPI.getAll = companiesAPI.list;\r\n\r\n/* ---- Uploads: use base (no /api) ---- */\r\nexport const uploadsAPI = {\r\n  // returns the URL string like \"/uploads/companies/123-file.png\"\r\n  async uploadCompanyLogo(file) {\r\n    const formData = new FormData();\r\n    formData.append('logo', file);\r\n    const data = await unwrap(\r\n      httpRaw.post('/upload/logo', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      })\r\n    );\r\n    return data?.url; // convenience: return just the path\r\n  },\r\n};\r\n\r\n/*\r\n  IMPORTANT:\r\n  Admin pages typically call /api/admin/users.\r\n  We align usersAPI to that base. Older code sometimes calls createUser/updateUser/deleteUser —\r\n  we expose aliases so nothing breaks.\r\n*/\r\nexport const usersAPI = {\r\n  list: (params = {}) => unwrap(http.get('/admin/users', { params })),\r\n  get: (id) => unwrap(http.get(`/admin/users/${id}`)),\r\n  create: (payload) => unwrap(http.post('/admin/users', payload)),\r\n  update: (id, payload) => unwrap(http.put(`/admin/users/${id}`, payload)),\r\n  remove: (id) => unwrap(http.delete(`/admin/users/${id}`)),\r\n};\r\nusersAPI.getAll = usersAPI.list;\r\n// ✅ Back-compat aliases\r\nusersAPI.createUser = usersAPI.create;\r\nusersAPI.updateUser = usersAPI.update;\r\nusersAPI.deleteUser = usersAPI.remove;\r\n\r\nexport const surveysAPI = {\r\n  // --- Admin/General survey endpoints ---\r\n  list: (params = {}) => unwrap(http.get('/surveys', { params })),\r\n  get: (id) => unwrap(http.get(`/surveys/${id}`)),\r\n  create: (payload) => unwrap(http.post('/surveys', payload)),\r\n  update: (id, payload) => unwrap(http.put(`/surveys/${id}`, payload)),\r\n  remove: (id) => unwrap(http.delete(`/surveys/${id}`)),\r\n\r\n  // --- Admin: responses list/export ---\r\n  listResponses: (surveyId, params = {}) =>\r\n    unwrap(http.get(`/surveys/${surveyId}/responses`, { params })),\r\n  deleteResponse: (surveyId, responseId) =>\r\n    unwrap(http.delete(`/surveys/${surveyId}/responses/${responseId}`)),\r\n  exportCSV: (surveyId) =>\r\n    http.get(`/surveys/${surveyId}/responses/export`, { responseType: 'blob' }),\r\n\r\n  // --- Student/Alumni: pending surveys & submit ---\r\n  forMe: (params = {}) => unwrap(http.get('/surveys/active/eligible', { params })),\r\n  submitResponse: (surveyId, payload) =>\r\n    unwrap(http.post(`/surveys/${surveyId}/responses`, payload)),\r\n  myResponse: (surveyId) => unwrap(http.get(`/surveys/${surveyId}/my-response`)), // optional\r\n};\r\n// aliases / compatibility\r\nsurveysAPI.getAll = surveysAPI.list;\r\nsurveysAPI.responses = surveysAPI.listResponses;\r\n// Some pages call surveysAPI.delete(responseId). Provide a flat delete route too:\r\nsurveysAPI.delete = (responseId) => unwrap(http.delete(`/survey-responses/${responseId}`));\r\nsurveysAPI.eligibleActive = surveysAPI.forMe;\r\nsurveysAPI.submit = surveysAPI.submitResponse;\r\n\r\nexport const profileAPI = {\r\n  getMe: () => unwrap(http.get('/profile/me')),\r\n  updateMe: (data) => unwrap(http.put('/profile/me', data)),\r\n};\r\n\r\nexport const adminAPI = { getStats: () => unwrap(http.get('/admin/stats')) };\r\n\r\nexport function logApiBase() {\r\n  console.log('[API] Base URL:', API_BASE_RESOLVED, 'Root:', API_ROOT);\r\n}\r\n\r\nexport const analyticsAPI = {\r\n  logSearch: (term) => http.post('/analytics/search', { term }).catch(() => {}),\r\n};\r\n\r\nexport default http;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}