{"ast":null,"code":"var _import$meta$env, _import$meta$env2;\n// src/utils/api.js\n// Centralized Axios client + API helpers\n\nimport axios from 'axios';\n\n/* =========================\r\n   Base URL & Axios instance\r\n   ========================= */\n// Accept either Vite or CRA envs, then fall back to localhost:5000\nconst API_BASE = typeof import.meta !== 'undefined' && (((_import$meta$env = import.meta.env) === null || _import$meta$env === void 0 ? void 0 : _import$meta$env.VITE_API_BASE_URL) || ((_import$meta$env2 = import.meta.env) === null || _import$meta$env2 === void 0 ? void 0 : _import$meta$env2.VITE_API_URL)) || typeof process !== 'undefined' && (process.env.REACT_APP_API_URL || process.env.REACT_APP_API_BASE_URL) || 'http://localhost:5000';\nexport const API_ROOT = `${String(API_BASE).replace(/\\/$/, '')}/api`;\nexport const http = axios.create({\n  baseURL: API_ROOT,\n  withCredentials: false,\n  // we use Bearer tokens rather than cookies\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n/* =========================\r\n   Auth Token helpers\r\n   ========================= */\nexport function setAuthToken(token) {\n  if (token) {\n    http.defaults.headers.common.Authorization = `Bearer ${token}`;\n  } else {\n    delete http.defaults.headers.common.Authorization;\n  }\n}\n\n/* =========================\r\n   Interceptors (req/res)\r\n   ========================= */\nhttp.interceptors.response.use(res => res, error => {\n  var _error$response, _error$response2;\n  const status = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status;\n  const data = error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n  const message = (data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || (error === null || error === void 0 ? void 0 : error.message) || `HTTP ${status || 'ERR'}`;\n  error.normalizedMessage = message;\n  return Promise.reject(error);\n});\n\n/* =========================\r\n   Utility: unwrap response\r\n   ========================= */\nconst unwrap = p => p.then(r => r.data).catch(e => {\n  throw new Error(e.normalizedMessage || e.message || 'Request failed');\n});\n\n/* =========================\r\n   Health / Ping\r\n   ========================= */\nexport const healthAPI = {\n  ping: () => unwrap(http.get('/health'))\n};\n\n/* =========================\r\n   Auth\r\n   ========================= */\nexport const authAPI = {\n  login: credentials => unwrap(http.post('/auth/login', credentials)),\n  me: () => unwrap(http.get('/auth/me')),\n  logout: () => unwrap(http.post('/auth/logout'))\n  // If you later add register/OTP on the backend, we can wire them here.\n};\n\n/* =========================\r\n   Jobs\r\n   ========================= */\nexport const jobsAPI = {\n  list: (params = {}) => unwrap(http.get('/jobs', {\n    params\n  })),\n  get: id => unwrap(http.get(`/jobs/${id}`)),\n  create: payload => unwrap(http.post('/jobs', payload)),\n  update: (id, payload) => unwrap(http.put(`/jobs/${id}`, payload)),\n  remove: id => unwrap(http.delete(`/jobs/${id}`))\n};\n\n/* =========================\r\n   Companies\r\n   ========================= */\nexport const companiesAPI = {\n  list: (params = {}) => unwrap(http.get('/companies', {\n    params\n  })),\n  get: id => unwrap(http.get(`/companies/${id}`)),\n  create: payload => unwrap(http.post('/companies', payload)),\n  update: (id, payload) => unwrap(http.put(`/companies/${id}`, payload)),\n  remove: id => unwrap(http.delete(`/companies/${id}`))\n};\n\n/* =========================\r\n   Users\r\n   ========================= */\nexport const usersAPI = {\n  list: (params = {}) => unwrap(http.get('/users', {\n    params\n  })),\n  // ?role=&status=&course=\n  get: id => unwrap(http.get(`/users/${id}`)),\n  create: payload => unwrap(http.post('/users', payload)),\n  update: (id, payload) => unwrap(http.put(`/users/${id}`, payload)),\n  remove: id => unwrap(http.delete(`/users/${id}`))\n};\n\n/* =========================\r\n   Surveys\r\n   ========================= */\nexport const surveysAPI = {\n  list: (params = {}) => unwrap(http.get('/surveys', {\n    params\n  })),\n  get: id => unwrap(http.get(`/surveys/${id}`)),\n  create: payload => unwrap(http.post('/surveys', payload)),\n  update: (id, payload) => unwrap(http.put(`/surveys/${id}`, payload)),\n  remove: id => unwrap(http.delete(`/surveys/${id}`)),\n  listResponses: (surveyId, params = {}) => unwrap(http.get(`/surveys/${surveyId}/responses`, {\n    params\n  }))\n};\n// Note: there is no standalone /survey-responses endpoint in the current backend.\n\n/* =========================\r\n   Admin / Dashboard stats\r\n   ========================= */\nexport const adminAPI = {\n  getStats: () => unwrap(http.get('/admin/stats')) // used by Dashboard\n  // If you add more admin analytics endpoints later, extend here.\n};\n\n/* =========================\r\n   Debug helper\r\n   ========================= */\nexport function logApiBase() {\n  // Helpful to confirm the frontend is pointing at the right API\n  /* eslint-disable no-console */\n  console.log('[API] Base URL:', API_BASE, 'Root:', API_ROOT);\n}\n\n/* =========================\r\n   DEFAULT EXPORT (compat)\r\n   ========================= */\n// Allows: import api from '../utils/api'; api.get('/path')\nexport default http;","map":{"version":3,"names":["axios","API_BASE","import","meta","_import$meta$env","env","VITE_API_BASE_URL","_import$meta$env2","VITE_API_URL","process","REACT_APP_API_URL","REACT_APP_API_BASE_URL","API_ROOT","String","replace","http","create","baseURL","withCredentials","headers","setAuthToken","token","defaults","common","Authorization","interceptors","response","use","res","error","_error$response","_error$response2","status","data","message","normalizedMessage","Promise","reject","unwrap","p","then","r","catch","e","Error","healthAPI","ping","get","authAPI","login","credentials","post","me","logout","jobsAPI","list","params","id","payload","update","put","remove","delete","companiesAPI","usersAPI","surveysAPI","listResponses","surveyId","adminAPI","getStats","logApiBase","console","log"],"sources":["/Users/macbookair/Desktop/AeroJobs/AeroJob/frontend/src/utils/api.js"],"sourcesContent":["// src/utils/api.js\r\n// Centralized Axios client + API helpers\r\n\r\nimport axios from 'axios';\r\n\r\n/* =========================\r\n   Base URL & Axios instance\r\n   ========================= */\r\n// Accept either Vite or CRA envs, then fall back to localhost:5000\r\nconst API_BASE =\r\n  (typeof import.meta !== 'undefined' && (import.meta.env?.VITE_API_BASE_URL || import.meta.env?.VITE_API_URL)) ||\r\n  (typeof process !== 'undefined' && (process.env.REACT_APP_API_URL || process.env.REACT_APP_API_BASE_URL)) ||\r\n  'http://localhost:5000';\r\n\r\nexport const API_ROOT = `${String(API_BASE).replace(/\\/$/, '')}/api`;\r\n\r\nexport const http = axios.create({\r\n  baseURL: API_ROOT,\r\n  withCredentials: false, // we use Bearer tokens rather than cookies\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\n/* =========================\r\n   Auth Token helpers\r\n   ========================= */\r\nexport function setAuthToken(token) {\r\n  if (token) {\r\n    http.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  } else {\r\n    delete http.defaults.headers.common.Authorization;\r\n  }\r\n}\r\n\r\n/* =========================\r\n   Interceptors (req/res)\r\n   ========================= */\r\nhttp.interceptors.response.use(\r\n  (res) => res,\r\n  (error) => {\r\n    const status = error?.response?.status;\r\n    const data = error?.response?.data;\r\n    const message = data?.message || data?.error || error?.message || `HTTP ${status || 'ERR'}`;\r\n    error.normalizedMessage = message;\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n/* =========================\r\n   Utility: unwrap response\r\n   ========================= */\r\nconst unwrap = (p) =>\r\n  p.then((r) => r.data).catch((e) => {\r\n    throw new Error(e.normalizedMessage || e.message || 'Request failed');\r\n  });\r\n\r\n/* =========================\r\n   Health / Ping\r\n   ========================= */\r\nexport const healthAPI = {\r\n  ping: () => unwrap(http.get('/health')),\r\n};\r\n\r\n/* =========================\r\n   Auth\r\n   ========================= */\r\nexport const authAPI = {\r\n  login: (credentials) => unwrap(http.post('/auth/login', credentials)),\r\n  me: () => unwrap(http.get('/auth/me')),\r\n  logout: () => unwrap(http.post('/auth/logout')),\r\n  // If you later add register/OTP on the backend, we can wire them here.\r\n};\r\n\r\n/* =========================\r\n   Jobs\r\n   ========================= */\r\nexport const jobsAPI = {\r\n  list: (params = {}) => unwrap(http.get('/jobs', { params })),\r\n  get: (id) => unwrap(http.get(`/jobs/${id}`)),\r\n  create: (payload) => unwrap(http.post('/jobs', payload)),\r\n  update: (id, payload) => unwrap(http.put(`/jobs/${id}`, payload)),\r\n  remove: (id) => unwrap(http.delete(`/jobs/${id}`)),\r\n};\r\n\r\n/* =========================\r\n   Companies\r\n   ========================= */\r\nexport const companiesAPI = {\r\n  list: (params = {}) => unwrap(http.get('/companies', { params })),\r\n  get: (id) => unwrap(http.get(`/companies/${id}`)),\r\n  create: (payload) => unwrap(http.post('/companies', payload)),\r\n  update: (id, payload) => unwrap(http.put(`/companies/${id}`, payload)),\r\n  remove: (id) => unwrap(http.delete(`/companies/${id}`)),\r\n};\r\n\r\n/* =========================\r\n   Users\r\n   ========================= */\r\nexport const usersAPI = {\r\n  list: (params = {}) => unwrap(http.get('/users', { params })), // ?role=&status=&course=\r\n  get: (id) => unwrap(http.get(`/users/${id}`)),\r\n  create: (payload) => unwrap(http.post('/users', payload)),\r\n  update: (id, payload) => unwrap(http.put(`/users/${id}`, payload)),\r\n  remove: (id) => unwrap(http.delete(`/users/${id}`)),\r\n};\r\n\r\n/* =========================\r\n   Surveys\r\n   ========================= */\r\nexport const surveysAPI = {\r\n  list: (params = {}) => unwrap(http.get('/surveys', { params })),\r\n  get: (id) => unwrap(http.get(`/surveys/${id}`)),\r\n  create: (payload) => unwrap(http.post('/surveys', payload)),\r\n  update: (id, payload) => unwrap(http.put(`/surveys/${id}`, payload)),\r\n  remove: (id) => unwrap(http.delete(`/surveys/${id}`)),\r\n  listResponses: (surveyId, params = {}) =>\r\n    unwrap(http.get(`/surveys/${surveyId}/responses`, { params })),\r\n};\r\n// Note: there is no standalone /survey-responses endpoint in the current backend.\r\n\r\n/* =========================\r\n   Admin / Dashboard stats\r\n   ========================= */\r\nexport const adminAPI = {\r\n  getStats: () => unwrap(http.get('/admin/stats')), // used by Dashboard\r\n  // If you add more admin analytics endpoints later, extend here.\r\n};\r\n\r\n/* =========================\r\n   Debug helper\r\n   ========================= */\r\nexport function logApiBase() {\r\n  // Helpful to confirm the frontend is pointing at the right API\r\n  /* eslint-disable no-console */\r\n  console.log('[API] Base URL:', API_BASE, 'Root:', API_ROOT);\r\n}\r\n\r\n/* =========================\r\n   DEFAULT EXPORT (compat)\r\n   ========================= */\r\n// Allows: import api from '../utils/api'; api.get('/path')\r\nexport default http;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}