{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/AeroJobs/AeroJob/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../utils/api';\nimport toast from 'react-hot-toast';\n\n// Auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth reducer actions\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  UPDATE_USER: 'UPDATE_USER',\n  SET_ERROR: 'SET_ERROR'\n};\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      try {\n        const parsedUser = JSON.parse(user);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user: parsedUser,\n            token\n          }\n        });\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        logout();\n      }\n    } else {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await authAPI.login(credentials);\n      if (response.data.requiresVerification) {\n        // OTP verification required\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n        return {\n          requiresVerification: true,\n          userId: response.data.userId\n        };\n      }\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await authAPI.register(userData);\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n      toast.success('Registration successful! Please check your email for OTP verification.');\n      return {\n        success: true,\n        requiresVerification: true,\n        userId: response.data.userId\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Verify OTP function\n  const verifyOTP = async (email, otp) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await authAPI.verifyOTP({\n        email,\n        otp\n      });\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Email verified successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'OTP verification failed';\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Resend OTP function\n  const resendOTP = async email => {\n    try {\n      await authAPI.resendOTP({\n        email\n      });\n      toast.success('OTP sent successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to resend OTP';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n    toast.success('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateUser = userData => {\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: userData\n    });\n    localStorage.setItem('user', JSON.stringify({\n      ...state.user,\n      ...userData\n    }));\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.userType) === 'admin';\n  };\n\n  // Check if user is student or alumni\n  const isStudentOrAlumni = () => {\n    var _state$user2, _state$user3;\n    return ((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.userType) === 'student' || ((_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : _state$user3.userType) === 'alumni';\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    verifyOTP,\n    resendOTP,\n    logout,\n    updateUser,\n    isAdmin,\n    isStudentOrAlumni\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","AUTH_ACTIONS","SET_LOADING","LOGIN_SUCCESS","LOGOUT","UPDATE_USER","SET_ERROR","authReducer","state","action","type","loading","payload","user","token","isAuthenticated","error","initialState","AuthProvider","children","_s","dispatch","localStorage","getItem","parsedUser","JSON","parse","console","logout","login","credentials","response","data","requiresVerification","userId","setItem","stringify","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","verifyOTP","email","otp","_error$response3","_error$response3$data","resendOTP","_error$response4","_error$response4$data","removeItem","updateUser","isAdmin","_state$user","userType","isStudentOrAlumni","_state$user2","_state$user3","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/macbookair/Desktop/AeroJobs/AeroJob/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI } from '../utils/api';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Auth context\r\nconst AuthContext = createContext();\r\n\r\n// Auth reducer actions\r\nconst AUTH_ACTIONS = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n  SET_ERROR: 'SET_ERROR',\r\n};\r\n\r\n// Auth reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return { ...state, loading: action.payload };\r\n    \r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    \r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n    \r\n    case AUTH_ACTIONS.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is logged in on mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n\r\n    if (token && user) {\r\n      try {\r\n        const parsedUser = JSON.parse(user);\r\n        dispatch({\r\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n          payload: {\r\n            user: parsedUser,\r\n            token,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n        logout();\r\n      }\r\n    } else {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (credentials) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await authAPI.login(credentials);\r\n      \r\n      if (response.data.requiresVerification) {\r\n        // OTP verification required\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n        return { requiresVerification: true, userId: response.data.userId };\r\n      }\r\n\r\n      const { user, token } = response.data;\r\n      \r\n      // Store in localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token },\r\n      });\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await authAPI.register(userData);\r\n      \r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      toast.success('Registration successful! Please check your email for OTP verification.');\r\n      \r\n      return { \r\n        success: true, \r\n        requiresVerification: true, \r\n        userId: response.data.userId \r\n      };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Verify OTP function\r\n  const verifyOTP = async (email, otp) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await authAPI.verifyOTP({ email, otp });\r\n      const { user, token } = response.data;\r\n      \r\n      // Store in localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token },\r\n      });\r\n      \r\n      toast.success('Email verified successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'OTP verification failed';\r\n      dispatch({ type: AUTH_ACTIONS.SET_ERROR, payload: message });\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Resend OTP function\r\n  const resendOTP = async (email) => {\r\n    try {\r\n      await authAPI.resendOTP({ email });\r\n      toast.success('OTP sent successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to resend OTP';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateUser = (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_USER, payload: userData });\r\n    localStorage.setItem('user', JSON.stringify({ ...state.user, ...userData }));\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return state.user?.userType === 'admin';\r\n  };\r\n\r\n  // Check if user is student or alumni\r\n  const isStudentOrAlumni = () => {\r\n    return state.user?.userType === 'student' || state.user?.userType === 'alumni';\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    verifyOTP,\r\n    resendOTP,\r\n    logout,\r\n    updateUser,\r\n    isAdmin,\r\n    isStudentOrAlumni,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}